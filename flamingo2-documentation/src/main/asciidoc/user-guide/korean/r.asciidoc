[[rstudio]]

== R/RStudio

Flamingo 2는 RStudio Server와 연계하여 동작합니다. 하지만 RStudio의 지원은 OpenSource 버전을 기준으로 하며 관리자가 R과 RStudio Server를 설치하여 연동하도록 합니다.

image::r/rstudio.png[scaledwidth=100%,RStudio Server 연동]

=== RStudio Server

RStudio는 Server와 Desktop 버전으로 구분하며 기술지원 여부에 따라서 OpenSource, Professional 버전으로 구분합니다. RStudio Server의 OpenSource 버전과 비교하여 Professional 버전에서 추가로 제공하는 기능은 다음과 같습니다.

* 멀티 노드에 대한 로드 밸런싱
* 리소스 및 세션 관리 기능
* LDAP, Active Directory, Google Account 등의 사용자 관리
* Kerberos 인증
* 클라이언트 IP 주소 제한 및 SSL을 이용한 트래픽 암호화
* 시스템 모니터링
* 향상된 리소스 관리 (사용자 및 그룹별 리소스 사용 제한 등)

본 문서는 RStudio Server의 OpenSource 버전을 대상으로 합니다. Flamingo의 기술지원 범위에는 RStudio Server 및 R에 대한 유지보수 및 기술지원을 포함하지 않습니다. RStudio Server Professional에 해당하는 기능은 별도 기술지원을 받으십시오. RStudio Server에 대한 상세한 정보는 http://www.rstudio.com/products/rstudio/[rstudio.com]을 참고하십시오.

=== Flamingo 연동

Flamingo에서는 RStudio Server와 연계 부분은 다음과 같습니다.

* Flamingo System Agent를 통해 Flamingo 사용자와 RStudio Server가 설치되어 있는 리눅스 서버의 사용자 계정 관리
* 자동 로그인

[[userintegration]]
==== 사용자 계정 연동

Flamingo의 사용자가 RStudio 메뉴를 선택하면 Flamingo는 RStudio Server에 자동 로그인을 시도합니다.
하지만 여기에서는 전제조건이 있습니다. RStudio Server에도 Flamingo에 로그인한 사용자가 리눅스 사용자 계정으로 생성되어 있어야 한다는 점입니다.
Flamingo에서는 System Agent를 통해서 RStudio Server의 사용자와 Flamingo의 사용자를 동기화할 수 있습니다.
System Agent가 동작하는 시점은 Flamingo의 시스템 관리자가 사용자 승인, 추가, 삭제, 변경을 하는 경우와 Flamingo 사용자가 비밀번호를 변경하는 경우 입니다.

`/WEB-INF/config.properties` 파일에는 System Agent를 연동할지 여부를 설정하는 설정값이 있습니다.
`user.system.agent.apply` 설정값을 true로 설정하면 사용자 정보 변경시 `user.system.agent.urls` 로 지정한 System Agent로 사용자 정보 변경 등을 요청하게 됩니다.

[source]
----
user.system.agent.urls=http://192.168.1.1:7070/remote/agent/system

user.system.agent.apply=true
----

[WARNING]
Flamingo에서 리모트 웹 터미널을 이용하여 R을 터미널에서 사용하고자 하는 경우 Flamingo의 리모트 웹 터미널 서버를 RStudio Server에 설치해야 합니다.

==== 자동 로그인

R 및 RStudio Server(OpenSource 버전)의 사용자 기준은 리눅스의 사용자 계정을 의미합니다.
따라서 Flamingo의 사용자와는 근본적으로 다른 사용자이므로 이 두 시스템을 통합하기 위해서는 Flamingo의 사용자가
RStudio Server의 리눅스 사용자로 존재해야 함을 의미합니다.
일단 존재한다는 가정하에서 Flamingo에서 RStudio 메뉴를 선택하는 경우 Flamingo는 `/WEB-INF/config.properties` 파일에 지정되어 있는 RStudio Server에 자동 로그인을 시도합니다.

[source,properties]
----
rserver.auth.url=http://192.168.1.1:8787/auth-public-key
rserver.signin.url=http://192.168.1.1:8787/auth-do-sign-in
----

Flamingo 사용자의 접속 환경에 따라서 RStudio Server에 자동 로그인이 되지 않을 수도 있습니다.
이 경우 모두 IP 주소로 Flamingo와 RStudio Server를 구성하거나 또는 도메인을 통해서 접근하도록 합니다.
`/etc/hosts` 파일에 Flamingo와 RStudio Server를 FQDN으로 구성을 하더라도 환경에 따라서 RStudio Server에 자동 로그인이 되지 않을 수 있습니다.
또한 경우에 따라서는 사용자의 네트워크 환경에 방화벽이 있는 경우 접속이 불가능한 경우도 있으므로 자동 로그인이 되지 않는 경우 이 부분을 확인하도록 합니다.

image::r/rstudio1.png[scaledwidth=100%,RStudio Server 자동 로그인이 되지 않는 경우]

자동 로그인을 하더라도 R Session Timeout과 Flamingo의 Session Timeout은 다릅니다. 일반적으로는 Flamingo의 Session Timeout을 R Session Timeout 보다 더 길게 설정하면 사용하는데 문제가 없습니다.

==== Flamingo의 Session Timeout

Flamingo의 Session Timeout을 설정하려면 `/WEB-INF/web.xml` 파일에서 다음을 수정합니다.

[source,xml]
----
<web-app>
  <session-config>
    <session-timeout>3000</session-timeout>
    <cookie-config>
      <path>/</path>
    </cookie-config>
  </session-config>
</web-app>
----

Java EE에서는 `session-timeout` 설정을 다음과 같이 정의하고 있습니다.

* 분 단위로 설정
* 0 또는 0보다 작은 경우 컨테이너가 session을 timeout 처리하지 않음
* 지정하지 않으면 컨테이너에서 정한 기본값을 적용

==== RStudio Server의 Session Timeout

RStudio Server의 Session Timeout을 설정하려면 `/etc/rstudio/rsession.conf` 파일에서 다음을 변경하거나 추가합니다. 기본은 분 단위 설정이며 0으로 설정하는 경우 Session Timeout을 적용하지 않고 무제한으로 설정됩니다.

[source,properties]
----
session-timeout-minutes=30
----

설정을 변경한 후 서버 재시작이 필요하면 다음의 커맨드를 실행하도록 합니다.

[source,bash]
----
# sudo rstudio-server restart
----

RStudio Server에 대한 자세한 설정은 https://support.rstudio.com/hc/en-us/articles/200552316-Configuring-the-Server[Configuring the Server]을 참고하십시오.

[WARNING]
RStudio Server는 OpenSource 및 Professional 버전 모두 서버의 사양과 사용자의 수에 따라서 사용자 접근을 제한하는 기능을 제공합니다. 따라서 저사양의 서버에서 많은 수의 사용자가 접근하고자 하는 경우 RStudio Server를 다수의 서버로 구성하고 RStudio Server Professional 버전으로 로드 밸런싱을 하도록 합니다.
